version: '3'

services:
  rest-api:
    image: tical1621-local/legacy-web-app

    build:
      context: .

    ports:
      - '8100:8000'

# TODO: Configure DB & Redis connections via env
    environment:
      DB_HOST: "db:${DATABASE_URL}"  # PostgreSQL container will be accessible on network via name of the service
      REDIS_HOST: "redis:${REDIS_LOCATION}"  # Same for Redis

  celery-beat:
    image: tical1621-local/legacy-web-app

    command: ["celery", "beat", "-A", "DjangoApi", "-l", "info"]

# TODO: Configure Redis connection via env
    environment:
      REDIS_HOST: "redis:${REDIS_LOCATION}"

  celery-worker:
    image: tical1621-local/legacy-web-app

    command: ["celery", "worker", "-A", "DjangoApi", "-l", "info"]

# TODO: Configure DB & Redis connections via env
    environment:
        DB_HOST: "db:${DATABASE_URL}"
        REDIS_HOST: "redis:${REDIS_LOCATION}"

  postgresql:
    image: postgres:14-alpine

    ports:
      - "5432:5432"

    volumes:
      - postgres-data:/var/lib/postgresql/data

    environment:
      POSTGRES_PASSWORD: "pg_pwd:${DB_PASSWORD}"

  redis:
    image: redis:6.2-alpine
    ports:
      - "6379:6379"

volumes:
  postgres-data:
